import{createQuickAccess,dashesToCamelCase,camelCaseToDashes}from"./tools.js";function createShadowDOM(a,b){const c=window.webComponentTemplates.get(b);window.ShadyCSS&&(window.ShadyCSS.prepareTemplate(c,b),window.ShadyCSS.styleElement(a));const d=a.attachShadow({mode:"open"});d.appendChild(c.content.cloneNode(!0))}function ensureQuickAccess(a){a.$||(a.$=createQuickAccess(a.shadowRoot,"id"),a.$$=b=>a.shadowRoot.querySelector(b),a.$$$=b=>Array.from(a.shadowRoot.querySelectorAll(b)))}function handleConnected(a,b){if(ensureQuickAccess(a),b){const c={};Object.keys(b).forEach(d=>{const e=b[d],f=camelCaseToDashes(d);c[d]=a[d],Object.defineProperty(a,d,{get(){return a._properties[d]},set(b){const c=a._properties[d];let g=a=>a.toString();switch(e.type){case Array:a._properties[d]="string"==typeof b?JSON.parse(b):Array.isArray(b)?b:[],g=a=>JSON.stringify(a);break;case Boolean:a._properties[d]=b&&"false"!==b,g=()=>"";break;case Number:a._properties[d]=(void 0===b?0:+b)||0;break;case Object:a._properties[d]="string"==typeof b?JSON.parse(b):"object"==typeof b?b:{},g=a=>JSON.stringify(a);break;case String:a._properties[d]=(void 0===b||null===b?"":b+"")||"";}e.observer&&("function"==typeof e.observer?c!==a._properties[d]&&e.observer(a,a._properties[d],c):a[e.observer]?c!==a._properties[d]&&a[e.observer](a._properties[d],c):console.warn(`The observer with the name: '${e.observer}' was not found inside the class for web component ${a.constructor.is}. Make sure that you added a public function with the name '${e.observer}' to the class.`)),e.reflectToAttribute&&(a._properties[d]?a.setAttribute(f,g(a._properties[d])):a.removeAttribute(f))}})}),Object.keys(b).forEach(d=>{const e=b[d],f=camelCaseToDashes(d);let g,h=c[d]||null;if(h)switch(e.type){case Array:Array.isArray(h)?a[d]=h:h=null;break;case Boolean:"boolean"==typeof h?a[d]=h:h=null;break;case Number:"number"==typeof h?a[d]=h:h=null;break;case Object:"object"==typeof h?a[d]=h:h=null;break;case String:"string"==typeof h?a[d]=h:h=null;}if(a.hasAttribute(f)&&(g=a.getAttribute(f)),e.reflectToAttribute||void 0===a[d])if(void 0!==g)switch(e.type){case Array:a[d]=JSON.parse(g);break;case Boolean:a[d]="false"!==g;break;case Number:a[d]=+g;break;case Object:a[d]=JSON.parse(g);break;case String:a[d]=g+"";}else switch(e.type){case Array:a[d]=e.value||[];break;case Boolean:a[d]=e.value||!1;break;case Number:a[d]=e.value||0;break;case Object:a[d]=e.value||{};break;case String:a[d]=e.value||"";}})}}const base="web-component-base-element";export class webComponentBaseClass extends HTMLElement{static get is(){return base}static get template(){return this.is}static get properties(){return{}}static get observedAttributes(){return this.properties?Object.keys(this.properties).map(a=>camelCaseToDashes(a)):[]}constructor(){super(),this._properties={},this.$=null,this.$$=()=>null,this.$$$=()=>[],console.assert(this.constructor.is!==base,"Error, make sure that the web component implements: static get is() { return \"name-of-your-web-component\"; }"),createShadowDOM(this,this.constructor.template),this.eventHandlers=[]}connectedCallback(){handleConnected(this,this.constructor.properties),this.attached&&this.attached(),this.onAttached&&this.onAttached(this),Object.defineProperty(this,"onAttached",{get(){},set(a){a(this)}})}disconnectedCallback(){this.detached&&this.detached(),this.onDetached&&this.onDetached(this),this.eventHandlers.forEach(a=>{a.element.removeEventListener(a.event,a.handler)})}attributeChangedCallback(a,b,c){const d=dashesToCamelCase(a);ensureQuickAccess(this),this.constructor.properties[d]&&this.constructor.properties[d].type===Boolean&&(b=!!(""===b||b&&"false"!==b),c=!!(""===c||c&&"false"!==c)),b!==c&&(this[d]=c)}addAutoEventListener(a,b,c){this.eventHandlers.find(d=>d.element===a&&d.event===b&&d.handler===c)||(this.eventHandlers.push({element:a,event:b,handler:c}),a.addEventListener(b,c))}removeAutoEventListener(a,b,c){const d=this.eventHandlers.findIndex(d=>d.element===a&&d.event===b&&d.handler===c);-1!==d&&(this.eventHandlers.splice(d,1),a.removeEventListener(b,c))}refreshQuickAccess(){this.$=createQuickAccess(this.shadowRoot,"id")}}
//# sourceMappingURL=webComponentBaseClass.js.map